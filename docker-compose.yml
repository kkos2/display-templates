version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  nginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - node
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN_TEMPLATES}`)"

  node:
    image: node:14
    command: npm start
    # @TODO: Fix setup so the ws connection between browser and webpack-dev-server can be achieved without exposing port.
    # ports:
    #  - '3000:3000'
    networks:
      - app
    working_dir: /app
    volumes:
      - ./:/app

  # Run a storybook instance, exposed as storybook.${COMPOSE_DOMAIN} via traefik.
  storybook:
    image: node:14
    command: npm run storybook
    ports:
      - '6006'
    networks:
      - app
      # make the container accessible to traefik.
      - frontend
    working_dir: /app
    volumes:
      - ./:/app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      # Make storybook available on http as well as https.
      - "traefik.http.routers.storybook_${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.storybook_${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN_STORYBOOK}`)"
